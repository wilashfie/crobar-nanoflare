import copy, numpy as np
from sunpy.map import Map
from astropy.coordinates import SkyCoord
from astropy.nddata import StdDevUncertainty

def iswat_map(sav,key):

	rec = sav[key][0]
	wave = "".join([ch for ch in key if ch.isdigit()])
	nx,ny = rec[0].shape
	time_str = rec['rtime'].decode('ascii').strip()
	hdr = {'CRPIX1':nx/2+1, 'CRPIX2':ny/2+1,
		   'CDELT1':rec['DX'], 'CDELT2':rec['DY'],
		   'CRVAL1':rec['XC'], 'CRVAL2':rec['YC'], 
		   'CUNIT1':rec['XUNITS'], 'CUNIT2':rec['YUNITS'],
		   'CTYPE1':'HPLN-TAN', 'CTYPE2':'HPLT-TAN', 
		   'TELESCOP':'SDO', 'INSTRUME':'AIA', 'DETECTOR':'AIA',
		   'WAVELNTH':int(wave), 'WAVE_STR':wave+'_THIN',
		   'WAVEUNIT':'Angstrom', 'DATE-OBS':time_str, 
		   'HGLN_OBS':rec['L0'], 'HGLT_OBS':rec['B0'], 
		   'CROTA2':rec['ROLL_ANGLE'], 'DSUN_OBS':1.496e11, 
		   'CRLN_OBS':'L0', 'CRLT_OBS':'B0',
		   'RSUN_OBS':rec['RSUN'], 'EXPTIME':len(rec['files_averaged'])}

	for k in list(hdr.keys()):
		if('decode' in dir(hdr[k])): hdr[k] = hdr[k].decode('ascii').strip()

	return Map(rec[0]*hdr['EXPTIME'],hdr)

# These are placeholder methods pending temperature response functions
# being added to AIApy. error estimates are included for the initial 
# version as well, although I believe they're already in the initial version
def estimate_aia_error(map_in, channel=None):
	if(channel is None): channel = map_in.meta['detector']+map_in.meta['wave_str']
	refchannels=np.array(['AIA94_THIN', 'AIA131_THIN', 'AIA171_THIN', 'AIA193_THIN', 'AIA211_THIN', 'AIA304_THIN', 'AIA335_THIN'])
	refg = np.array([2.128,1.523,1.168,1.024,0.946,0.658,0.596])
	refn = np.array([1.14,1.18,1.15,1.2,1.2,1.14,1.18])
	sigmas = np.zeros(map_in.data.shape)
	dnpp = refg[np.where(refchannels == channel)]
	rdn = refn[np.where(refchannels == channel)]
	return np.sqrt(np.clip(map_in.data*dnpp,0.0,None) + rdn**2)

# These are placeholder methods pending temperature response functions
# being added to AIApy. error estimates are included for the initial 
# version as well, although I believe they're already in the initial version
def estimate_aia_error_fromdat(dat, channel):
	refchannels=np.array(['AIA94_THIN', 'AIA131_THIN', 'AIA171_THIN', 'AIA193_THIN', 'AIA211_THIN', 'AIA304_THIN', 'AIA335_THIN'])
	refg = np.array([2.128,1.523,1.168,1.024,0.946,0.658,0.596])
	refn = np.array([1.14,1.18,1.15,1.2,1.2,1.14,1.18])
	#sigmas = np.zeros(map_in.data.shape)
	dnpp = refg[np.where(refchannels == channel)]
	rdn = refn[np.where(refchannels == channel)]
	return np.sqrt(np.clip(dat*dnpp,0.0,None) + rdn**2)
	
def aia_temperature_response(map_in, channel=None):

	import numpy as np
	if(channel is None): channel = map_in.meta['detector']+map_in.meta['wave_str']
	refchannels=np.array(['AIA94_THIN', 'AIA131_THIN', 'AIA171_THIN', 'AIA193_THIN', 'AIA211_THIN', 'AIA304_THIN', 'AIA335_THIN'])

	tresp_table = np.array([
		[4.19139272e-37,3.18403601e-37,4.76355146e-32,5.02904843e-32,3.50683321e-32,2.18770061e-32,1.82082844e-32],
		[4.29846310e-36,3.22254703e-36,3.68087684e-31,3.87148505e-31,2.69654165e-31,1.68871119e-31,1.39744298e-31],
		[3.52111513e-35,2.61657920e-35,2.21387613e-30,2.32047048e-30,1.61428629e-30,1.01539292e-30,8.35003266e-31],
		[2.15155175e-34,1.59575286e-34,9.63075532e-30,1.00618225e-29,6.99201769e-30,4.41937131e-30,3.61043502e-30],
		[8.85166997e-34,6.65779556e-34,2.62414742e-29,2.73292290e-29,1.89805268e-29,1.20616106e-29,9.79038534e-30],
		[2.64795876e-33,2.07015132e-33,4.45957238e-29,4.62787819e-29,3.21845295e-29,2.05862621e-29,1.66231655e-29],
		[7.39183029e-33,6.05768615e-33,5.88372834e-29,6.07417689e-29,4.25432841e-29,2.74692632e-29,2.21635736e-29],
		[2.08674473e-32,1.76074833e-32,7.49208882e-29,7.66703114e-29,5.47460625e-29,3.58887516e-29,2.92087542e-29],
		[5.32280934e-32,4.52633001e-32,1.03500072e-28,1.04665173e-28,7.70205849e-29,5.18651400e-29,4.26274633e-29],
		[1.01510939e-31,8.57121883e-32,1.48420092e-28,1.48830887e-28,1.11611537e-28,8.43167878e-29,6.33241978e-29],
		[1.31969775e-31,1.09184271e-31,1.99881736e-28,2.00376704e-28,1.48871074e-28,1.91630752e-28,8.41393924e-29],
		[1.38933997e-31,1.10207963e-31,2.71470754e-28,2.73250499e-28,1.97849078e-28,6.90487232e-28,1.09629397e-28],
		[1.52788382e-31,1.11371658e-31,4.05063070e-28,4.08831868e-28,2.90091025e-28,2.68321177e-27,1.59150272e-28],
		[2.04670037e-31,1.29105226e-31,6.54997355e-28,6.61036486e-28,4.66933031e-28,9.33633728e-27,2.59336099e-28],
		[3.37291482e-31,1.80385897e-31,1.09497168e-27,1.10428384e-27,7.89943654e-28,2.83653585e-26,4.51515081e-28],
		[6.22433997e-31,3.27295431e-31,1.81623967e-27,1.83762681e-27,1.35469747e-27,7.51103241e-26,7.97894436e-28],
		[1.14945858e-30,8.92002136e-31,2.90906580e-27,2.98368077e-27,2.29864401e-27,1.69815856e-25,1.36878313e-27],
		[1.92656078e-30,3.15214579e-30,4.37591336e-27,4.61293987e-27,3.70744737e-27,3.07677142e-25,2.15121473e-27],
		[2.73972828e-30,9.73440787e-30,5.96847161e-27,6.50060607e-27,5.32147343e-27,4.12299309e-25,2.90884974e-27],
		[3.38796703e-30,2.22709702e-29,7.39128539e-27,8.24557506e-27,6.69315848e-27,4.11433763e-25,3.41925800e-27],
		[3.98468285e-30,4.01788984e-29,8.67449979e-27,9.84096530e-27,7.87319526e-27,3.41933126e-25,3.78959860e-27],
		[4.68888930e-30,6.27471832e-29,9.95965390e-27,1.15903170e-26,9.25346828e-27,2.63109453e-25,4.17884924e-27],
		[5.57724682e-30,8.91764995e-29,1.14243231e-26,1.39632139e-26,1.12106507e-26,1.98605731e-25,4.64649371e-27],
		[6.61312575e-30,1.18725647e-28,1.34159068e-26,1.77379964e-26,1.39759841e-26,1.50675226e-25,5.18793974e-27],
		[7.69873222e-30,1.52888040e-28,1.66009329e-26,2.42660162e-26,1.75429607e-26,1.16128068e-25,5.73777452e-27],
		[8.80882288e-30,2.05082946e-28,2.19166483e-26,3.54062409e-26,2.15159218e-26,9.11151672e-26,6.13897429e-27],
		[1.01197590e-29,3.47651873e-28,3.04393397e-26,5.28076365e-26,2.52058162e-26,7.27408501e-26,6.31858066e-27],
		[1.24235074e-29,8.80482184e-28,4.24551135e-26,7.57548907e-26,2.80814625e-26,5.89234839e-26,6.36192560e-27],
		[1.85916669e-29,2.66533063e-27,5.46124010e-26,9.64500044e-26,2.89428670e-26,4.76497904e-26,5.99837945e-27],
		[3.57431116e-29,7.05805149e-27,5.87306921e-26,9.95035205e-26,2.57986042e-26,3.72899126e-26,4.81744519e-27],
		[7.40163203e-29,1.46072515e-26,5.34888608e-26,8.50682605e-26,2.03073186e-26,2.81863949e-26,3.35720499e-27],
		[1.40367160e-28,2.45282476e-26,5.69953432e-26,7.63243171e-26,1.69626905e-26,2.15898124e-26,2.63732660e-27],
		[2.34619332e-28,3.55303726e-26,8.99381587e-26,8.00857294e-26,1.61667405e-26,1.71625650e-26,2.65194161e-27],
		[3.50314745e-28,4.59075911e-26,1.69634100e-25,8.95460085e-26,1.65561573e-26,1.40451758e-26,2.97594545e-27],
		[4.78271991e-28,5.36503515e-26,3.12477095e-25,9.96536550e-26,1.75607919e-26,1.17757492e-26,3.35107900e-27],
		[6.12070853e-28,5.68444094e-26,5.24806168e-25,1.08520987e-25,1.91638109e-26,1.01261521e-26,3.66488663e-27],
		[7.55587098e-28,5.47222296e-26,7.88759175e-25,1.16018001e-25,2.13919425e-26,8.90343325e-27,3.86907993e-27],
		[9.17523861e-28,4.81119761e-26,1.05392610e-24,1.23253858e-25,2.41030560e-26,7.97399099e-27,3.98249755e-27],
		[1.08989852e-27,3.85959059e-26,1.24465730e-24,1.33290059e-25,2.69021271e-26,7.24241298e-27,4.00495098e-27],
		[1.24045630e-27,2.80383406e-26,1.28593896e-24,1.53051294e-25,2.93365234e-26,6.59744810e-27,3.88113016e-27],
		[1.32502623e-27,1.83977650e-26,1.14316216e-24,1.96447388e-25,3.18854130e-26,6.03369120e-27,3.62558008e-27],
		[1.31341529e-27,1.11182849e-26,8.56234347e-25,2.81167898e-25,3.70341037e-26,5.80518760e-27,3.33826036e-27],
		[1.20609026e-27,6.50748885e-27,5.28341859e-25,4.06492781e-25,4.99880175e-26,6.33722379e-27,3.04882976e-27],
		[1.04215049e-27,3.96843481e-27,2.62971839e-25,5.18462720e-25,7.85106324e-26,7.67647070e-27,2.71070234e-27],
		[9.10286530e-28,2.61876319e-27,1.06118152e-25,5.21700296e-25,1.24919334e-25,8.80175388e-27,2.50715036e-27],
		[8.66408740e-28,1.85525324e-27,4.07695483e-26,3.80438138e-25,1.66057469e-25,8.24825691e-27,2.81207972e-27],
		[7.91289650e-28,1.39717024e-27,2.52503209e-26,1.89390887e-25,1.57937960e-25,6.24089724e-27,3.70484370e-27],
		[5.79545741e-28,1.11504283e-27,2.46082719e-26,6.76946014e-26,1.03164467e-25,4.20805637e-27,4.56853237e-27],
		[3.76980809e-28,9.38169611e-28,1.99231167e-26,2.29005173e-26,5.22396021e-26,2.79356363e-27,4.79107749e-27],
		[3.07180587e-28,8.24801234e-28,1.03293005e-26,1.04739857e-26,2.40915758e-26,1.92432996e-27,4.45474563e-27],
		[3.80396260e-28,7.43331919e-28,3.95012736e-27,7.10153621e-27,1.12964568e-26,1.40765767e-27,3.86954529e-27],
		[5.90602903e-28,6.74537063e-28,1.80531856e-27,6.11725282e-27,5.94188041e-27,1.09530489e-27,3.22466361e-27],
		[9.44297921e-28,6.14495760e-28,1.34240926e-27,5.72716914e-27,3.88586017e-27,8.95398748e-28,2.60315761e-27],
		[1.44620154e-27,5.70805277e-28,1.22599436e-27,5.81269453e-27,3.15819472e-27,7.63692246e-28,2.03714253e-27],
		[2.07453706e-27,5.61219786e-28,1.05241421e-27,6.32309411e-27,2.71019768e-27,6.79283492e-28,1.53754765e-27],
		[2.75538782e-27,6.31981777e-28,8.14794974e-28,6.39019697e-27,2.11642133e-27,6.25043819e-28,1.11256462e-27],
		[3.34721420e-27,9.19747307e-28,6.22671197e-28,5.43856741e-27,1.48862847e-27,5.79895432e-28,7.71472387e-28],
		[3.65940611e-27,1.76795732e-27,5.15934126e-28,4.02432562e-27,1.02304623e-27,5.30203019e-28,5.25924670e-28],
		[3.52350628e-27,3.77985446e-27,4.75354344e-28,2.82301679e-27,7.31784516e-28,4.72054211e-28,3.94053508e-28],
		[2.91029046e-27,7.43166191e-27,4.74903304e-28,2.11704426e-27,5.53478904e-28,4.06398816e-28,3.84310717e-28],
		[2.00104132e-27,1.19785603e-26,4.78687900e-28,2.23337165e-27,4.46856485e-28,3.37609409e-28,4.58924041e-28],
		[1.11792532e-27,1.48234676e-26,4.55829373e-28,3.97858677e-27,3.92863480e-28,2.73245692e-28,5.15941951e-28],
		[5.06298440e-28,1.36673114e-26,4.07150741e-28,7.95264076e-27,3.72931301e-28,2.20589454e-28,4.64395852e-28],
		[1.98518377e-28,9.61047146e-27,3.57245583e-28,1.28401071e-26,3.65339284e-28,1.81531579e-28,3.28256715e-28],
		[8.04488438e-29,5.61209353e-27,3.20550268e-28,1.62347002e-26,3.55630868e-28,1.53214082e-28,1.96954455e-28],
		[4.22436839e-29,3.04779780e-27,2.95165454e-28,1.72337033e-26,3.40535153e-28,1.31554437e-28,1.12675591e-28],
		[3.04428119e-29,1.69378976e-27,2.76040754e-28,1.64931273e-26,3.22463539e-28,1.13841616e-28,6.77096153e-29],
		[2.64974316e-29,1.02113491e-27,2.60329069e-28,1.49059780e-26,3.03925227e-28,9.88110918e-29,4.49240089e-29],
		[2.48278975e-29,6.82223774e-28,2.46810279e-28,1.30615389e-26,2.86214839e-28,8.58220263e-29,3.30827404e-29],
		[2.38426184e-29,5.02099099e-28,2.34850846e-28,1.12339098e-26,2.69680531e-28,7.45720191e-29,2.65114499e-29],
		[2.30756823e-29,3.99377760e-28,2.24072357e-28,9.54159826e-27,2.54348518e-28,6.48572910e-29,2.25550937e-29],
		[2.23854873e-29,3.36279037e-28,2.14207991e-28,8.01516788e-27,2.40161001e-28,5.65055652e-29,1.99697955e-29],
		[2.17266258e-29,2.94767378e-28,2.05064500e-28,6.65012330e-27,2.26980049e-28,4.93740580e-29,1.81538087e-29],
		[2.10850182e-29,2.65740865e-28,1.96522347e-28,5.44154359e-27,2.14749808e-28,4.33173739e-29,1.67978207e-29],
		[2.04553015e-29,2.44396277e-28,1.88483152e-28,4.37334107e-27,2.03400164e-28,3.81523933e-29,1.57337695e-29],
		[1.98364636e-29,2.28003967e-28,1.80902292e-28,3.44663922e-27,1.92922643e-28,3.37486378e-29,1.48639773e-29],
		[1.92281059e-29,2.14941419e-28,1.73738800e-28,2.65755259e-27,1.83300873e-28,2.99546536e-29,1.41285398e-29],
		[1.86302687e-29,2.04178995e-28,1.66965536e-28,2.00468513e-27,1.74512179e-28,2.66917503e-29,1.34889359e-29],
		[1.80430777e-29,1.95031045e-28,1.60556677e-28,1.48327207e-27,1.66511372e-28,2.38549331e-29,1.29191097e-29],
		[1.74665051e-29,1.87011994e-28,1.54483016e-28,1.08402516e-27,1.59224955e-28,2.13941288e-29,1.24005111e-29],
		[1.69002018e-29,1.79777869e-28,1.48706556e-28,7.90838503e-28,1.52548069e-28,1.92385909e-29,1.19196007e-29],
		[1.63446209e-29,1.73093957e-28,1.43192373e-28,5.83858656e-28,1.46377695e-28,1.73546861e-29,1.14672196e-29],
		[1.57996562e-29,1.66795789e-28,1.37907913e-28,4.42508753e-28,1.40611733e-28,1.56938854e-29,1.10366058e-29],
		[1.52660230e-29,1.60785455e-28,1.32825121e-28,3.48125195e-28,1.35172075e-28,1.42356895e-29,1.06238424e-29],
		[1.47441066e-29,1.55002399e-28,1.27922855e-28,2.85752256e-28,1.29997802e-28,1.29513000e-29,1.02263465e-29],
		[1.42348593e-29,1.49418229e-28,1.23191287e-28,2.44391607e-28,1.25051783e-28,1.18165665e-29,9.84297831e-30],
		[1.37393635e-29,1.44022426e-28,1.18626746e-28,2.16390390e-28,1.20312020e-28,1.08142518e-29,9.47335237e-30],
		[1.32580788e-29,1.38807103e-28,1.14223853e-28,1.96827453e-28,1.15761159e-28,9.92602924e-30,9.11700118e-30],
		[1.27918053e-29,1.33772767e-28,1.09981960e-28,1.82495290e-28,1.11390623e-28,9.13750482e-30,8.77387475e-30],
		[1.23400380e-29,1.28908404e-28,1.05890211e-28,1.71428945e-28,1.07184164e-28,8.43701275e-30,8.44314358e-30],
		[1.19015383e-29,1.24196208e-28,1.01932242e-28,1.62406058e-28,1.03121985e-28,7.81096167e-30,8.12362152e-30],
		[1.12645320e-29,1.17437501e-28,9.63156127e-29,1.51933509e-28,9.73965188e-29,7.15763499e-30,7.67320164e-30],
		[1.08345507e-29,1.12854330e-28,9.24868237e-29,1.44901031e-28,9.34835221e-29,6.64945995e-30,7.36503754e-30],
		[1.04173188e-29,1.08410498e-28,8.87821394e-29,1.38474764e-28,8.97004291e-29,6.19120321e-30,7.06703008e-30],
		[1.00126908e-29,1.04112003e-28,8.52022826e-29,1.32495411e-28,8.60487083e-29,5.77712171e-30,6.77937106e-30],
		[9.62072002e-30,9.99529904e-29,8.17441929e-29,1.26861397e-28,8.25233410e-29,5.40124641e-30,6.50168669e-30],
		[9.24130214e-30,9.59358806e-29,7.84067206e-29,1.21512910e-28,7.91243635e-29,5.06036075e-30,6.23397007e-30],
		[8.87416188e-30,9.20512291e-29,7.51845158e-29,1.16405103e-28,7.58447614e-29,4.74872005e-30,5.97563350e-30],
		[8.51901564e-30,8.83009123e-29,7.20766616e-29,1.11513918e-28,7.26839868e-29,4.46433861e-30,5.72667599e-30],
		[8.17575193e-30,8.46817043e-29,6.90812878e-29,1.06822401e-28,6.96389952e-29,4.20296826e-30,5.48687053e-30],
		[7.84403689e-30,8.11921928e-29,6.61954234e-29,1.02317510e-28,6.67074662e-29,3.96254792e-30,5.25602098e-30]])

	logt = np.array([4.  ,4.05,4.1 ,4.15,4.2 ,4.25,4.3 ,4.35,4.4 ,4.45,4.5 ,4.55,4.6 ,4.65,4.7 ,4.75,4.8 ,4.85,4.9 ,4.95,5.  ,5.05,
		5.1 ,5.15,5.2 ,5.25,5.3 ,5.35,5.4 ,5.45,5.5 ,5.55,5.6 ,5.65,5.7 ,5.75,5.8 ,5.85,5.9 ,5.95,6.  ,6.05,6.1 ,6.15,6.2 ,6.25,6.3 ,
		6.35,6.4 ,6.45,6.5 ,6.55,6.6 ,6.65,6.7 ,6.75,6.8 ,6.85,6.9 ,6.95,7.  ,7.05,7.1 ,7.15,7.2 ,7.25,7.3 ,7.35,7.4 ,7.45,7.5 ,7.55,
		7.6 ,7.65,7.7 ,7.75,7.8 ,7.85,7.9 ,7.95,8.  ,8.05,8.1 ,8.15,8.2 ,8.25,8.3 ,8.35,8.4 ,8.45,8.5 ,8.55,8.6 ,8.65,8.7 ,8.75,8.8 ,
		8.85,8.9 ,8.95,9.  ])

	return logt,tresp_table[:,np.where(refchannels == channel)].flatten()
